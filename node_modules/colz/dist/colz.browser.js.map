{"version":3,"file":"colz.browser.js","sources":["../src/colz.js"],"sourcesContent":["/**\n * Colorz (or Colz) is a Javascript \"library\" to help\n * in color conversion between the usual color-spaces\n * Hex - Rgb - Hsl / Hsv - Hsb\n *\n * It provides some helpers to output Canvas / CSS\n * color strings.\n *\n * by Carlos Cabo 2013\n * http://carloscabo.com\n *\n * Some formulas borrowed from Wikipedia or other authors.\n */\n\nconst round = Math.round\n\n/*\n ==================================\n Color constructors\n ==================================\n*/\n\nexport class Rgb {\n  constructor (col) {\n    this.r = col[0]\n    this.g = col[1]\n    this.b = col[2]\n  }\n\n  toString () {\n    return `rgb(${this.r},${this.g},${this.b})`\n  }\n}\n\nexport class Rgba extends Rgb {\n  constructor (col) {\n    super(col)\n    this.a = col[3]\n  }\n\n  toString () {\n    return `rgba(${this.r},${this.g},${this.b},${this.a})`\n  }\n}\n\nexport class Hsl {\n  constructor (col) {\n    this.h = col[0]\n    this.s = col[1]\n    this.l = col[2]\n  }\n\n  toString () {\n    return `hsl(${this.h},${this.s}%,${this.l}%)`\n  }\n}\n\nexport class Hsla extends Hsl {\n  constructor (col) {\n    super(col)\n    this.a = col[3]\n  }\n\n  toString () {\n    return `hsla(${this.h},${this.s}%,${this.l}%,${this.a})`\n  }\n}\n\n/*\n ==================================\n Main Colz color object\n ==================================\n*/\nexport class Color {\n  constructor (r, g, b, a = 1.0) {\n    // If args are not given in (r, g, b, [a]) format, convert\n    if (typeof r === 'string') {\n      let str = r\n      // Add initial '#' if missing\n      if (str.charAt(0) !== '#') { str = '#' + str }\n      // If Hex in #fff format convert to #ffffff\n      if (str.length < 7) {\n        str = '#' + str[1] + str[1] + str[2] + str[2] + str[3] + str[3]\n      }\n      ([r, g, b] = hexToRgb(str))\n    } else if (r instanceof Array) {\n      a = r[3] || a\n      b = r[2]\n      g = r[1]\n      r = r[0]\n    }\n\n    this.r = r\n    this.g = g\n    this.b = b\n    this.a = a\n\n    this.rgb = new Rgb([this.r, this.g, this.b])\n    this.rgba = new Rgba([this.r, this.g, this.b, this.a])\n    this.hex = rgbToHex(this.r, this.g, this.b)\n\n    this.hsl = new Hsl(rgbToHsl(this.r, this.g, this.b))\n    this.h = this.hsl.h\n    this.s = this.hsl.s\n    this.l = this.hsl.l\n    this.hsla = new Hsla([this.h, this.s, this.l, this.a])\n  }\n\n  setHue (newHue) {\n    this.h = newHue\n    this.hsl.h = newHue\n    this.hsla.h = newHue\n    this.updateFromHsl()\n  }\n\n  setSat (newSat) {\n    this.s = newSat\n    this.hsl.s = newSat\n    this.hsla.s = newSat\n    this.updateFromHsl()\n  }\n\n  setLum (newLum) {\n    this.l = newLum\n    this.hsl.l = newLum\n    this.hsla.l = newLum\n    this.updateFromHsl()\n  }\n\n  setAlpha (newAlpha) {\n    this.a = newAlpha\n    this.hsla.a = newAlpha\n    this.rgba.a = newAlpha\n  }\n\n  updateFromHsl () {\n    // Updates Rgb\n    this.rgb = null\n    this.rgb = new Rgb(hslToRgb(this.h, this.s, this.l))\n\n    this.r = this.rgb.r\n    this.g = this.rgb.g\n    this.b = this.rgb.b\n    this.rgba.r = this.rgb.r\n    this.rgba.g = this.rgb.g\n    this.rgba.b = this.rgb.b\n\n    // Updates Hex\n    this.hex = null\n    this.hex = rgbToHex([this.r, this.g, this.b])\n  }\n}\n\n/*\n ==================================\n Public Methods\n ==================================\n*/\n\nexport const randomColor = function () {\n  const r = '#' + Math.random().toString(16).slice(2, 8)\n  return new Color(r)\n}\n\nexport const hexToRgb = function (hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result ? [\n    parseInt(result[1], 16),\n    parseInt(result[2], 16),\n    parseInt(result[3], 16)\n  ] : null\n}\n\nexport const componentToHex = function (c) {\n  const hex = c.toString(16)\n  return hex.length === 1 ? '0' + hex : hex\n}\n\n// You can pass 3 numeric values or 1 Array\nexport const rgbToHex = function (r, g, b) {\n  if (r instanceof Array) {\n    b = r[2]\n    g = r[1]\n    r = r[0]\n  }\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b)\n}\n\n/**\n * Converts an RGB color value to HSL. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n *\n * @param {Number} r The red color value\n * @param {Number} g The green color value\n * @param {Number} b The blue color value\n * @return {Array} The HSL representation\n */\nexport const rgbToHsl = function (r, g, b) {\n  if (r instanceof Array) {\n    b = r[2]\n    g = r[1]\n    r = r[0]\n  }\n\n  let h, s, l, d, max, min\n\n  r /= 255\n  g /= 255\n  b /= 255\n\n  max = Math.max(r, g, b)\n  min = Math.min(r, g, b)\n  l = (max + min) / 2\n\n  if (max === min) {\n    h = s = 0 // achromatic\n  } else {\n    d = max - min\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n\n    h /= 6\n  }\n\n  // CARLOS\n  h = round(h * 360)\n  s = round(s * 100)\n  l = round(l * 100)\n\n  return [h, s, l]\n}\n\nexport const hue2rgb = function (p, q, t) {\n  if (t < 0) { t += 1 }\n  if (t > 1) { t -= 1 }\n  if (t < 1 / 6) { return p + (q - p) * 6 * t }\n  if (t < 1 / 2) { return q }\n  if (t < 2 / 3) { return p + (q - p) * (2 / 3 - t) * 6 }\n  return p\n}\n\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n *\n * @param {Number} h The hue\n * @param {Number} s The saturation\n * @param {Number} l The lightness\n * @return {Array} The RGB representation\n */\n\nexport const hslToRgb = function (h, s, l) {\n  if (h instanceof Array) {\n    l = h[2]\n    s = h[1]\n    h = h[0]\n  }\n  h = h / 360\n  s = s / 100\n  l = l / 100\n\n  let r, g, b, q, p\n\n  if (s === 0) {\n    r = g = b = l // achromatic\n  } else {\n    q = l < 0.5 ? l * (1 + s) : l + s - l * s\n    p = 2 * l - q\n    r = hue2rgb(p, q, h + 1 / 3)\n    g = hue2rgb(p, q, h)\n    b = hue2rgb(p, q, h - 1 / 3)\n  }\n  return [round(r * 255), round(g * 255), round(b * 255)]\n}\n\n/**\n * Converts an RGB color value to HSB / HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n *\n * @param {Number} r The red color value\n * @param {Number} g The green color value\n * @param {Number} b The blue color value\n * @return {Array} The HSB representation\n */\nexport const rgbToHsb = function (r, g, b) {\n  let max, min, h, s, v, d\n\n  r = r / 255\n  g = g / 255\n  b = b / 255\n\n  max = Math.max(r, g, b)\n  min = Math.min(r, g, b)\n  v = max\n\n  d = max - min\n  s = max === 0 ? 0 : d / max\n\n  if (max === min) {\n    h = 0 // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0)\n        break\n      case g:\n        h = (b - r) / d + 2\n        break\n      case b:\n        h = (r - g) / d + 4\n        break\n    }\n    h /= 6\n  }\n\n  // map top 360,100,100\n  h = round(h * 360)\n  s = round(s * 100)\n  v = round(v * 100)\n\n  return [h, s, v]\n}\n\n/**\n * Converts an HSB / HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n *\n * @param {Number} h The hue\n * @param {Number} s The saturation\n * @param {Number} v The value\n * @return {Array} The RGB representation\n */\nexport const hsbToRgb = function (h, s, v) {\n  let r, g, b, i, f, p, q, t\n\n  // h = h / 360;\n  if (v === 0) { return [0, 0, 0] }\n\n  s = s / 100\n  v = v / 100\n  h = h / 60\n\n  i = Math.floor(h)\n  f = h - i\n  p = v * (1 - s)\n  q = v * (1 - (s * f))\n  t = v * (1 - (s * (1 - f)))\n\n  if (i === 0) {\n    r = v\n    g = t\n    b = p\n  } else if (i === 1) {\n    r = q\n    g = v\n    b = p\n  } else if (i === 2) {\n    r = p\n    g = v\n    b = t\n  } else if (i === 3) {\n    r = p\n    g = q\n    b = v\n  } else if (i === 4) {\n    r = t\n    g = p\n    b = v\n  } else if (i === 5) {\n    r = v\n    g = p\n    b = q\n  }\n\n  r = Math.floor(r * 255)\n  g = Math.floor(g * 255)\n  b = Math.floor(b * 255)\n\n  return [r, g, b]\n}\n\nexport const hsvToRgb = hsbToRgb // alias\n\n/* Convert from Hsv */\nexport const hsbToHsl = function (h, s, b) {\n  return rgbToHsl(hsbToRgb(h, s, b))\n}\n\nexport const hsvToHsl = hsbToHsl // alias\n\n/*\n ==================================\n Color Scheme Builder\n ==================================\n*/\nexport class ColorScheme {\n  constructor (colorVal, angleArray) {\n    this.palette = []\n\n    if (angleArray === undefined && colorVal instanceof Array) {\n      // Asume you passing a color array ['#f00','#0f0'...]\n      this.createFromColors(colorVal)\n    } else {\n      // Create scheme from color + hue angles\n      this.createFromAngles(colorVal, angleArray)\n    }\n  }\n\n  createFromColors (colorVal) {\n    for (let i in colorVal) {\n      if (colorVal.hasOwnProperty(i)) {\n        // console.log(colorVal[i]);\n        this.palette.push(new Color(colorVal[i]))\n      }\n    }\n    return this.palette\n  }\n\n  createFromAngles (colorVal, angleArray) {\n    this.palette.push(new Color(colorVal))\n\n    for (let i in angleArray) {\n      if (angleArray.hasOwnProperty(i)) {\n        const tempHue = (this.palette[0].h + angleArray[i]) % 360\n        this.palette.push(new Color(hslToRgb(tempHue, this.palette[0].s, this.palette[0].l)))\n      }\n    }\n    return this.palette\n  }\n\n  /* Complementary colors constructors */\n  static Compl (colorVal) {\n    return new this(colorVal, [180])\n  }\n\n  /* Triad */\n  static Triad (colorVal) {\n    return new this(colorVal, [120, 240])\n  }\n\n  /* Tetrad */\n  static Tetrad (colorVal) {\n    return new this(colorVal, [60, 180, 240])\n  }\n\n  /* Analogous */\n  static Analog (colorVal) {\n    return new this(colorVal, [-45, 45])\n  }\n\n  /* Split complementary */\n  static Split (colorVal) {\n    return new this(colorVal, [150, 210])\n  }\n\n  /* Accented Analogous */\n  static Accent (colorVal) {\n    return new this(colorVal, [-45, 45, 180])\n  }\n}\n"],"names":[],"mappings":"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"}