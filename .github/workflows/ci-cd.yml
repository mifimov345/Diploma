name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Проверка кода из репозитория
      - name: Checkout code
        uses: actions/checkout@v2

      # Настройка Docker Buildx для мультиархитектурной сборки
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Установка Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version


      # Кэширование слоев Docker для ускорения сборки
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Сборка и пуш Docker образов с использованием docker-compose
      - name: Build and push Docker images
        run: |
          docker-compose -f docker-compose.yaml build --no-cache
          docker-compose -f docker-compose.yaml push

      # Запуск тестов для backend-сервисов
      - name: Run Backend Tests
        run: |
          dotnet test ./Backend/AuthService/AuthService.Tests/AuthService.Tests.csproj
          dotnet test ./Backend/BackendGateway/BackendGateway.Tests/BackendGateway.Tests.csproj
          dotnet test ./Backend/FileService/FileService.Tests/FileService.Tests.csproj

      # (Опционально) Шаг деплоя
      - name: Deploy Application
        run: |
          echo "Deploying application to a workflow..."