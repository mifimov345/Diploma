name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Install Docker Compose
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    # Cache Docker layers
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    # Build and push Docker images using docker-compose
    - name: Build and push Docker images
      run: |
        docker-compose -f docker-compose.yaml build
        docker-compose -f docker-compose.yaml push

    # Run tests
    - name: Run Backend Tests
      run: |
        dotnet test ./Backend/AuthService/AuthService.Tests/AuthService.Tests.csproj
        dotnet test ./Backend/BackendGateway/BackendGateway.Tests/BackendGateway.Tests.csproj
        dotnet test ./Backend/FileService/FileService.Tests/FileService.Tests.csproj

    # (Optional) Run Frontend tests if any, for example using jest, mocha, etc.
    - name: Run Frontend Tests
      run: |
        cd frontend
        npm install
        npm test

    # (Optional) Deploy step (e.g., deploy to a cloud platform)
    - name: Deploy to Cloud
      run: |
        # Add deployment steps here (Kubernetes, Docker Swarm, etc.)
        echo "Deploying application..."